---
import "glightbox/dist/css/glightbox.min.css";
import Image from "astro/components/Image.astro";
import Layout from "../../layouts/Layout.astro";
import type { ImageData } from "../../interfaces/imageData.response";
import type { ImageListResponse } from "../../interfaces/image.response";
import Gallery from "../../components/Gallery.astro";

export const prerender = false;

const { id } = Astro.params;

const getImageDetails = async (id: string) => {
    const response = await fetch(
        `https://rule34.xxx/index.php?page=dapi&s=post&q=index&id=${id}&json=1`,
        {
            cache: "no-cache",
        },
    );
    if (response.ok) {
        const data = await response.json();
        return data[0] as ImageData;
    }
    return null;
};
const image = await getImageDetails(id as string);
console.log(image);

const getRelatedImages = async (tag: string) => {
    const response = await fetch(
        `https://rule34.xxx/index.php?page=dapi&s=post&q=index&tags=${tag}&limit=50&json=1`,
        {
            cache: "no-cache",
        },
    );
    if (response.ok) {
        return (await response.json()) as ImageListResponse[];
    }
    return [];
};

let relatedImages: ImageListResponse[] = [];
try {
    if (image) {
        const tags = image.tags.split(" ");
        const randomTag = tags[Math.floor(Math.random() * tags.length)];
        relatedImages = await getRelatedImages(randomTag);
    }
} catch (error) {
    console.error("Error fetching related images:", error);
}

const tags = image?.tags ? image.tags.split(" ").slice(0, 10) : [];
---

<Layout title="RinconHentai" meta="RinconHentai">
    <div class="container mx-auto mt-8 p-4">
        {
            image ? (
                <div>
                    <div class="flex flex-col gap-4">
                        <div class="text-center mb-4">
                            <h1 class="text-3xl font-bold">
                                Autor:{" "}
                                <span class="text-red-700">{image.owner}</span>
                            </h1>
                            <a
                                href={image.file_url}
                                target="_blank"
                                rel="noopener noreferrer"
                                class="text-blue-500 hover:text-blue-700 underline mt-2 inline-block"
                            >
                                Ver fuente
                            </a>
                        </div>
                        <Image
                            id="main-image"
                            src={image.file_url}
                            fetchpriority="high"
                            format="webp"
                            alt=""
                            loading="eager"
                            quality="low"
                            class="mx-auto lightbox rounded-md"
                            layout="responsive"
                            width={image.width}
                            height={image.height}
                            sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 33vw"
                        />
                        <div class="flex flex-wrap gap-4 justify-center">
                            {tags?.map((tag) => (
                                <a
                                    href={`/tags/${tag}/1`}
                                    class="btn bg-red-700 hover:bg-gray-800 text-white px-4 py-2 inline-block rounded-md transition-all duration-300 ease-in-out transform hover:-translate-y-1"
                                >
                                    {tag}
                                </a>
                            ))}
                        </div>
                    </div>
                    <h2 class="text-2xl font-bold text-center mt-8 mb-4">
                        Imágenes Relacionadas
                    </h2>
                    {relatedImages ? (
                        <Gallery images={relatedImages} />
                    ) : (
                        <p class="text-white text-center">
                            No se encontraron imágenes relacionadas.
                        </p>
                    )}
                </div>
            ) : (
                <div class="flex items-center justify-center min-h-screen">
                    <div class="text-center">
                        <p class="text-white text-2xl mb-4">
                            No se encontró la imagen solicitada.
                        </p>
                        <img
                            src="https://i.waifu.pics/k2r~YJ0.gif"
                            alt="No images found"
                            class="mx-auto mb-4 my-4 rounded-md"
                        />
                        <a
                            href="/inicio/1"
                            class="btn bg-red-700 hover:bg-gray-800 text-white px-4 py-2 inline-block rounded-md transition-all duration-300 ease-in-out transform hover:-translate-y-1"
                        >
                            Ir a Inicio
                        </a>
                    </div>
                </div>
            )
        }
    </div></Layout
>

<script>
    import Glightbox from "glightbox";
    document.addEventListener("DOMContentLoaded", () => {
        const lightbox = Glightbox({
            selector: ".lightbox",
            loop: false,
            touchNavigation: true,
            preload: true,
            closeButton: true,
        });
    });
</script>

<style>
    .btn {
        cursor: pointer;
    }

    .btn:hover {
        transform: translateY(-1px);
    }
</style>
