---
import type { GetStaticPaths } from "astro";
import type { ImageListResponse } from "../../interfaces/image.response";
import Gallery from "../../components/Gallery.astro";
import Layout from "../../layouts/Layout.astro";


export const getStaticPaths = (() => {
	const pages = Array.from({ length: 100 }, (_, i) => i + 1);
	return pages.map((pid) => ({
		params: {
			pid: pid.toString(),
		},
	}));
}) satisfies GetStaticPaths;

const { pid } = Astro.params;
const currentPage = Number(pid) || 1;

let images: ImageListResponse[] = [];

try {
	const response = await fetch(
		`https://rule34.xxx/index.php?page=dapi&s=post&q=index&pid=${currentPage}&limit=50&json=1`,
		{
			headers: {
				'Cache-Control': 'public, max-age=300',
			}
		}
	);
	if (response.ok) {
		images = await response.json();
	}
} catch (error) {
	console.error("Error fetching images:", error);
}
---

<Layout title={`PÃ¡gina ${currentPage}`}>
	<Gallery images={images} />
	<div class="pagination">
		{
			currentPage > 1 && (
				<a
					href={`
				${currentPage === 2 ? "inicio/1" : `/inicio/${currentPage - 1}`}
			`}
					class="btn"
				>
					Anterior
				</a>
			)
		}
		{
			currentPage < 100 && (
				<a href={`/inicio/${currentPage + 1}`} class="btn" rel="prefetch">
					Siguiente
				</a>
			)
		}
	</div>
</Layout>

<style>
	.pagination {
		display: flex;
		justify-content: center;
		margin-top: 1rem;
	}

	.btn {
		padding: 0.75rem 1.5rem;
		margin: 0 0.5rem;
		background-color: #630000;
		color: white;
		border-radius: 0.5rem;
		text-decoration: none;
		border: 2px solid #181818;
		transition: background-color 0.3s, transform 0.3s;
	}
	.btn:hover {
		background-color: #181818;
		transform: scale(1.05);
	}
	.btn:active {
		transform: scale(0.95);
	}
</style>
